shiny::runApp()
shiny::runApp()
input$species <- 'wesa'
input <- list()
input$species <- 'wesa'
input$age <- 'July'
input$data_type <- 'n_counts'
data_[[input$species]] %>% filter(Year %in% input$yrs & Month.name %in% input$age) %>%
mutate(total.counted = sum(max.count)) %>% filter(!is.na(max.count)) %>%
group_by(SiteID,latitude,longitude) %>%
dplyr::summarize(
n_counts = n(),
sum_count = sum(max.count, na.rm=T),
mean_count = mean(max.count, na.rm=T) ) %>%
ungroup %>%
mutate(prop_count = sum_count / sum(sum_count)) %>%
select_("latitude", "longitude", input$data_type )%>%
rename_(output_data = input$data_type)
data_[[input$species]] %>% filter(Year %in% input$yrs & Month.name %in% input$age)
input$yrs <- '2013'
data_[[input$species]] %>% filter(Year %in% input$yrs & Month.name %in% input$age)
data_[[input$species]] %>% filter(Year %in% input$yrs & Month.name %in% input$age) %>%
mutate(total.counted = sum(max.count)) %>% filter(!is.na(max.count)) %>%
group_by(SiteID,latitude,longitude) %>%
dplyr::summarize(
n_counts = n(),
sum_count = sum(max.count, na.rm=T),
mean_count = mean(max.count, na.rm=T) ) %>%
ungroup %>%
mutate(prop_count = sum_count / sum(sum_count)) %>%
select_("latitude", "longitude", input$data_type )%>%
rename_(output_data = input$data_type)
shiny::runApp()
shiny::runApp()
shiny::runApp()
data_[[input$species]] %>% filter(Year %in% input$yrs & Month.name %in% input$age) %>%
mutate(total.counted = sum(max.count)) %>% filter(!is.na(max.count)) %>%
group_by(SiteID,latitude,longitude) %>%
dplyr::summarize(
n_counts = n(),
sum_count = sum(max.count, na.rm=T),
mean_count = mean(max.count, na.rm=T)
)
shiny::runApp()
shiny::runApp()
shiny::shinyApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
library(leaflet)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
source('dataImport.R')
warnings()
locations <- read.csv('./.data/sitelocations_decdegree.csv', header = T, stringsAsFactors=F) %>%
filter(SITEID != "") %>% mutate(longitude = as.character(lon),
latitude = as.character(lat)) %>% rename(SiteID = SITEID)
site.info  <- read.csv( './.data/site.info.clean.csv')
wesa       <- read.csv('./.data/wesa.clean.csv') %>%
filter(RecordID != 'RecordID' & !is.na(counts.cleaned)) %>%
select(RecordID, ID, SiteID, counts.cleaned ) %>%
group_by(RecordID) %>%
dplyr::summarize(max.count = max(counts.cleaned, na.rm=T),
avg.count = mean(counts.cleaned, na.rm=T),
sd.count = sd(counts.cleaned, na.rm = T),
sum.count = sum(counts.cleaned, na.rm = T),
n.counts = n() )%>%
mutate(SiteID = substr(RecordID, 1, 4),
Year = substr(RecordID, 5, 8),
Month = substr(RecordID, 9,9),
Day = substr(RecordID, 10, 11),
Month.name = ifelse(Month =='7', 'July', 'August')) %>%
left_join(locations, by = 'SiteID')
# Compile zero counts -----------------------------------------------------
records <- unique(wesa$RecordID)
zero.counts <-
site.info %>%
filter(!(RecordID %in% records)) %>%
select(-X, -SiteName) %>%
left_join(locations, by = 'SiteID')  %>% #RecordID, SiteID, Year, Month, Day, SiteName, OnlineName, size)
mutate(Year = substr(RecordID, 5, 8),
Month = substr(RecordID, 9,9),
Day = substr(RecordID, 10, 11),
Month.name = ifelse(Month =='7', 'July', 'August'))
zero.counts$max.count <- 0
zero.counts$avg.count <- 0
zero.counts$sd.count <- NA
zero.counts$sum.count <- 0
zero.counts$n.counts <- NA
name.list <- c(names(wesa))
zero.counts <- zero.counts %>% select(which(names(.) %in% name.list))
wesa <- rbind(wesa, zero.counts)
all.surveys.info <- wesa %>% select(RecordID, SiteID, Year, Month, Day) %>%
mutate (
Year = substr(RecordID, 5, 8),
Month = substr(RecordID, 9,9),
Day = substr(RecordID, 10, 11),
Date = as.Date(paste(Year, "-" , Month, "-", Day,sep =""), format = "%Y-%m-%d"))
falc    <- read.csv( './.data/falc.clean.csv') %>%
select(RecordID, SiteID, ID, Count) %>%
mutate (
Year = substr(RecordID, 5, 8),
Month = substr(RecordID, 9,9),
Day = substr(RecordID, 10, 11),
Date = as.Date(paste(Year, "-" , Month, "-", Day,sep =""), format = "%Y-%m-%d")) %>%
group_by(RecordID, SiteID, Date, Year, Month) %>%
dplyr::summarize(
TotalCounts = n(),
numberCounted = mean(Count, na.rm=T),
observed = 1
) %>%
right_join(all.surveys.info, by=c('RecordID', 'SiteID', 'Date', 'Year', 'Month') ) %>%
dplyr::mutate(observed.y.n = ifelse(is.na(observed), 0, 1),
count.falc = ifelse(is.na(numberCounted), 0, numberCounted),
Month.name = ifelse(Month =='7', 'July', 'August') ) %>%
left_join(locations, by = 'SiteID')
data_ <- list(falc= falc,wesa= wesa,locations= locations)
falc    <- read.csv( './.data/falc.clean.csv') %>%
select(RecordID, SiteID, ID, Count
)
falc    <- read.csv( './.data/falc.clean.csv') %>%
select(RecordID, SiteID, ID, Count) %>%
mutate (
Year = substr(RecordID, 5, 8),
Month = substr(RecordID, 9,9),
Day = substr(RecordID, 10, 11),
Date = as.Date(paste(Year, "-" , Month, "-", Day,sep =""), format = "%Y-%m-%d"))
falc    <- read.csv( './.data/falc.clean.csv') %>%
select(RecordID, SiteID, ID, Count) %>%
mutate (
Year = substr(RecordID, 5, 8),
Month = substr(RecordID, 9,9),
Day = substr(RecordID, 10, 11),
Date = as.Date(paste(Year, "-" , Month, "-", Day,sep =""), format = "%Y-%m-%d")) %>%
group_by(RecordID, SiteID, Date, Year, Month)
falc    <- read.csv( './.data/falc.clean.csv') %>%
select(RecordID, SiteID, ID, Count) %>%
mutate (
Year = substr(RecordID, 5, 8),
Month = substr(RecordID, 9,9),
Day = substr(RecordID, 10, 11),
Date = as.Date(paste(Year, "-" , Month, "-", Day,sep =""), format = "%Y-%m-%d")) %>%
group_by(RecordID, SiteID, Date, Year, Month) %>%
dplyr::summarize(
TotalCounts = n(),
numberCounted = mean(Count, na.rm=T),
observed = 1
)
falc    <- read.csv( './.data/falc.clean.csv') %>%
select(RecordID, SiteID, ID, Count) %>%
mutate (
Year = substr(RecordID, 5, 8),
Month = substr(RecordID, 9,9),
Day = substr(RecordID, 10, 11),
Date = as.Date(paste(Year, "-" , Month, "-", Day,sep =""), format = "%Y-%m-%d")) %>%
group_by(RecordID, SiteID, Date, Year, Month
)
falc    <- read.csv( './.data/falc.clean.csv') %>%
select(RecordID, SiteID, ID, Count) %>%
mutate (
Year = substr(RecordID, 5, 8),
Month = substr(RecordID, 9,9),
Day = substr(RecordID, 10, 11),
Date = as.Date(paste(Year, "-" , Month, "-", Day,sep =""), format = "%Y-%m-%d")) %>%
group_by(RecordID, SiteID, Date, Year, Month) %>%
dplyr::summarize(
TotalCounts = n()
)
falc    <- read.csv( './.data/falc.clean.csv') %>%
select(RecordID, SiteID, ID, Count) %>%
mutate (
Year = substr(RecordID, 5, 8),
Month = substr(RecordID, 9,9),
Day = substr(RecordID, 10, 11),
Date = as.Date(paste(Year, "-" , Month, "-", Day,sep =""), format = "%Y-%m-%d")) %>%
group_by(RecordID, SiteID, Date, Year, Month) %>%
dplyr::summarize(
TotalCounts = n(),
numberCounted = mean(Count, na.rm=T)
)
falc    <- read.csv( './.data/falc.clean.csv') %>%
select(RecordID, SiteID, ID, Count) %>%
mutate (
Year = substr(RecordID, 5, 8),
Month = substr(RecordID, 9,9),
Day = substr(RecordID, 10, 11),
Date = as.Date(paste(Year, "-" , Month, "-", Day,sep =""), format = "%Y-%m-%
)
))))
)
)))
""
"
falc    <- read.csv( './.data/falc.clean.csv') %>%
select(RecordID, SiteID, ID, Count) %>%
mutate (
Year = substr(RecordID, 5, 8),
Month = substr(RecordID, 9,9),
Day = substr(RecordID, 10, 11),
Date = as.Date(paste(Year, "-" , Month, "-", Day,sep =""), format = "%Y-%m-%d"))
View(falc)
falc    <- read.csv( './.data/falc.clean.csv')
View(falc)
is.na("")
falc.err <- filter(falc, is.na(as.numeric(Count)) | Count == "")
View(falc.err)
falc.err <- filter(falc, is.na(as.numeric(Count)))
falc.err <- falc %>% mutate(Count.numeric = as.numeric (Count)) %>% filter(is.na(Count.numeric))
falc.err <- falc %>% mutate(Count.numeric = as.numeric (Count))
View(falc.err)
unique(falc$Count)
unique(as.numeric(falc$Count))
str(falc)
falc    <- read.csv( './.data/falc.clean.csv', stringsAsFactor = F) %>%
select(RecordID, SiteID, ID, Count) %>%
mutate (
Year = substr(RecordID, 5, 8),
Month = substr(RecordID, 9,9),
Day = substr(RecordID, 10, 11),
Date = as.Date(paste(Year, "-" , Month, "-", Day,sep =""), format = "%Y-%m-%d")) %>%
group_by(RecordID, SiteID, Date, Year, Month) %>%
dplyr::summarize(
TotalCounts = n(),
numberCounted = mean(Count, na.rm=T),
observed = 1
)
falc    <- read.csv( './.data/falc.clean.csv', stringsAsFactor = F) %>%
select(RecordID, SiteID, ID, Count) %>%
mutate (
Year = substr(RecordID, 5, 8),
Month = substr(RecordID, 9,9),
Day = substr(RecordID, 10, 11),
Date = as.Date(paste(Year, "-" , Month, "-", Day,sep =""), format = "%Y-%m-%d"))
unique(as.numeric(falc$Count))
falc.err <- filter(falc, is.na(as.numeric(Count)) | Count == "")
View(falc.err)
falc    <- read.csv( './.data/falc.clean.csv', stringsAsFactor = F) %>%
select(RecordID, SiteID, ID, Count) %>%
mutate (
Count = as.numeric(Count),
Year = substr(RecordID, 5, 8),
Month = substr(RecordID, 9,9),
Day = substr(RecordID, 10, 11),
Date = as.Date(paste(Year, "-" , Month, "-", Day,sep =""), format = "%Y-%m-%d"))
falc    <- read.csv( './.data/falc.clean.csv', stringsAsFactor = F) %>%
select(RecordID, SiteID, ID, Count) %>%
mutate (
Count = as.numeric(Count),
Year = substr(RecordID, 5, 8),
Month = substr(RecordID, 9,9),
Day = substr(RecordID, 10, 11),
Date = as.Date(paste(Year, "-" , Month, "-", Day,sep =""), format = "%Y-%m-%d")) %>%
group_by(RecordID, SiteID, Date, Year, Month) %>%
dplyr::summarize(
TotalCounts = n(),
numberCounted = mean(Count, na.rm=T),
observed = 1
)
falc    <- read.csv( './.data/falc.clean.csv', stringsAsFactor = F) %>%
select(RecordID, SiteID, ID, Count) %>%
mutate (
Count = as.numeric(Count),
Year = substr(RecordID, 5, 8),
Month = substr(RecordID, 9,9),
Day = substr(RecordID, 10, 11),
Date = as.Date(paste(Year, "-" , Month, "-", Day,sep =""), format = "%Y-%m-%d")) %>%
group_by(RecordID, SiteID, Date, Year, Month) %>%
dplyr::summarize(
TotalCounts = n(),
numberCounted = mean(Count, na.rm=T),
observed = 1
) %>%
right_join(all.surveys.info, by=c('RecordID', 'SiteID', 'Date', 'Year', 'Month') ) %>%
dplyr::mutate(observed.y.n = ifelse(is.na(observed), 0, 1),
count.falc = ifelse(is.na(numberCounted), 0, numberCounted),
Month.name = ifelse(Month =='7', 'July', 'August') ) %>%
left_join(locations, by = 'SiteID')
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
names(wesa)
'lon' %in% names(wesa)
lonig <- 'lon'
lonig %in% names(wesa)
shiny::runApp()
shiny::runApp()
shiny::runApp()
?switch
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
falcchoices = c('Probability of observation' = 'probs',
"Total Number Counted" = 'totalobserved',
"Average Number Counted" = "meanobserved"
)
falcchoices
falcchoices[1]
falcchoices['Probability of observation']
falcchoices = list('Probability of observation' = 'probs',
"Total Number Counted" = 'totalobserved',
"Average Number Counted" = "meanobserved"
)
falcchoices
falcchoices <-  c('Probability of observation' = 'probs',
"Total Number Counted" = 'totalobserved',
"Average Number Counted" = "meanobserved")
falcchoices
falcchoices[1]
names(falcchoices)
renderTextnames(falcchoices)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
fat <- 'wesa'
species_choices <- switch(fat,
'wesa' = WESAchoices,
'falc' = FALCchoices)
species_choices
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
round(3.3333, 2)
shiny::runApp()
shiny::runApp()
shiny::runApp()
??runGitHub
source('dataImport.R')
shiny::runApp()
runApp()
runApp()
filter(site.info, SiteID == "SJEN")
filter(wesa, SiteID == "SJEN")
filter(locations, SiteID == "SJEN")
runApp()
filter(wesa, Year == 2015 & SiteID == "GRIC")
runApp()
runApp()
runApp()
runApp()
runApp()
update.packages("leaflet")
update.packages("Shiny")
update.packages("shiny")
runApp()
runApp()
runApp()
runApp()
runApp()
require(dplyr)
source('dataImport.R')
View(zero.counts)
wesa       <- read.csv('./.data/wesa4shiny.csv', stringsAsFactor = F) %>%
filter(RecordID != 'RecordID' & !is.na(counts.cleaned)) %>%
select(RecordID, ID, SiteID, counts.cleaned ) %>%
group_by(RecordID) %>%
dplyr::summarize(max.count = max(counts.cleaned, na.rm=T),
avg.count = mean(counts.cleaned, na.rm=T),
sd.count = sd(counts.cleaned, na.rm = T),
sum.count = sum(counts.cleaned, na.rm = T),
n.counts = n() )%>%
mutate(SiteID = substr(RecordID, 1, 4),
Year = substr(RecordID, 5, 8),
Month = substr(RecordID, 9,9),
Day = substr(RecordID, 10, 11),
Month.name = ifelse(Month =='7', 'July', 'August')) %>%
left_join(locations, by = 'SiteID')
library(shiny)
require(dplyr)
require(leaflet)
source('dataImport.R')
runApp()
runApp()
records <- unique(wesa$RecordID)
zero.counts <-
site.info %>%
filter(!(RecordID %in% records)) %>%
select(-X, -SiteName) %>%
left_join(locations, by = 'SiteID')  %>% #RecordID, SiteID, Year, Month, Day, SiteName, OnlineName, size)
mutate(Year = substr(RecordID, 5, 8),
Month = substr(RecordID, 9,9),
Day = substr(RecordID, 10, 11),
Month.name = ifelse(Month =='7', 'July', 'August'))
records
zero.counts <-
site.info %>%
filter(!(RecordID %in% records)) %>%
select(-X, -SiteName) %>%
left_join(locations, by = 'SiteID')  %>% #RecordID, SiteID, Year, Month, Day, SiteName, OnlineName, size)
mutate(Year = substr(RecordID, 5, 8),
Month = substr(RecordID, 9,9),
Day = substr(RecordID, 10, 11),
Month.name = ifelse(Month =='7', 'July', 'August'))
runApp()
runApp()
library(shiny)
require(dplyr)
require(leaflet)
source('dataImport.R')
runApp()
runApp()
runApp()
?shinyWidgetOutput
??shinyWidgetOutput
?mainPanel
?shiny::mainPanel
??leafletOutput
shiny::runApp()
shiny::runApp()
locations <- read.csv('./.data/sitelocations_decdegree.csv', header = T, stringsAsFactors=F) %>%
filter(SITEID != "")
str(locations)
runApp()
shiny::runApp()
source('~/Documents/SFU/PhD/SharingFiles_ForWindows/ShorebirdSurveyDatabase/ShinyResults/Shiny_Map/dataImport.R', echo=TRUE)
runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
